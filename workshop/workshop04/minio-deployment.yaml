---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-sts
  labels:
    name: minio-sts
    app: minio
  namespace: minio-namespace
spec:
  serviceName: minio-hsvc
  replicas: 4
  selector:
    matchLabels:
      name: minio-pod
      app: minio
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: minio-pvc
      labels:
        name: minio-pvc
        app: minio
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: do-block-storage-xfs
  template:
    metadata:
      name: minio-pod
      labels:
        name: minio-pod
        app: minio
    spec:
      initContainers:
        - name: minio-init-container
          image: busybox
          volumeMounts:
            - name: minio-pvc
              mountPath: /data
          command:
            - /bin/sh
            - -c
            - "chown 1001 /data"
      volumes:
        - name: minio-pvc
          persistentVolumeClaim:
            claimName: minio-pvc
      containers:
        - name: minio-container
          image: bitnami/minio:2022.12.12
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "400m"
              memory: "600Mi"
          volumeMounts:
            - name: minio-pvc
              mountPath: /data
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 9090
              protocol: TCP
          envFrom:
            - secretRef:
                name: minio-secrets
          command:
            - minio
            - server 
            - --address=:9000
            - --console-address=:9090
            - http://minio-sts-{0...3}.minio-hsvc.minio-namespace.svc.cluster.local/data
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/live
              port: 9000
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/ready
              port: 9000

---
# headless service
apiVersion: v1
kind: Service
metadata:
  name: minio-hsvc
  labels:
    name: minio-hsvc
    app: minio
  namespace: minio-namespace
spec:
  clusterIP: None
  selector:
    name: minio-pod
  ports:
    - name: minio-data
      port: 9000
      targetPort: 9000
    - name: minio-console
      port: 9090
      targetPort: 9090

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  labels:
    name: minio-ingress
    app: minio
  namespace: minio-namespace
spec:
  ingressClassName: nginx
  rules:
    - host: data-146.190.7.68.nip.io
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: minio-svc
                port:
                  number: 9000
    - host: console-146.190.7.68.nip.io
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: minio-svc
                port:
                  number: 9090

---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  labels: 
    name: minio-svc
    app: minio
  namespace: minio-namespace
spec:
  type: ClusterIP
  selector:
    name: minio-pod
    app: minio
  ports:
  - name: data
    port: 9000
    targetPort: 9000
  - name: console
    port: 9090
    targetPort: 9090
